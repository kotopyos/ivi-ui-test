plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.5.1"
}

def allureVersion = "2.23.0",
    slf4jVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.12.4",
            "org.junit.jupiter:junit-jupiter:5.9.2",
            'com.github.javafaker:javafaker:1.0.2',
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.seleniumhq.selenium:selenium-devtools-v109:4.8.0",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.github.bonigarcia:webdrivermanager:5.3.2",
            "org.aeonbits.owner:owner:1.0.12",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'io.rest-assured:rest-assured:5.3.0',
            'com.fasterxml.jackson.core:jackson-databind:2.15.2',
            'org.assertj:assertj-core:3.24.2'

    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
    systemProperty("taskName", "web")

}

task mobile(type: Test) {
    useJUnitPlatform {
        includeTags 'mobile'
    }
    systemProperty("taskName", "mobile")
}

task api(type: Test) {
    useJUnitPlatform {
        includeTags 'api'
    }
    systemProperty("taskName", "api")
}




